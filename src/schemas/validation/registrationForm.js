import * as yup from 'yup'

export const registrationFormValues = (process.env.MODE == 'development') ? {
  middle_name: 'aasdasd',
  last_name: 'aasdasd',
  first_name: 'aasdasd',
  email_prefix: 'super_thief',
  email_domain: 'gmail',
  email_extension: 'com',
  full_address: 'aasdasdsaaasdasdsaaasdasdsaaasdasdsaaasdasdsaaasdasdsaaasdasdsa',
  city_name: 'aasdasdsa',
  street_name: 'aasdasdsa',
  state: 'aasdasdsa',

  phone_number_0: "2",
  phone_number_1: "2",
  phone_number_2: "2",
  phone_number_3: "2",
  phone_number_4: "2",
  phone_number_5: "2",
  phone_number_6: "2",
  phone_number_7: "2",
  phone_number_8: "2",
  phone_number_9: "2",
  phone_number_10: "2",

  phone_number_verification_0: "2",
  phone_number_verification_1: "2",
  phone_number_verification_2: "2",
  phone_number_verification_3: "2",
  phone_number_verification_4: "2",
  phone_number_verification_5: "2",
  phone_number_verification_6: "2",
  phone_number_verification_7: "2",
  phone_number_verification_8: "2",
  phone_number_verification_9: "2",
  phone_number_verification_10: "2",

  created_at: new Date().toISOString()
} : {
  middle_name: '* Your middle name *',
  last_name: '* Your last name *',
  first_name: '* Your first name *',
  email_prefix: 'super_thief',
  email_domain: '',
  email_extension: '',
  full_address: '',
  city_name: '',
  street_name: '',
  state: '',

  created_at: new Date().toISOString()
}

export const schema = yup.object({
  middle_name: yup.string().matches(/^[A-Za-z ]*$/, 'No special characters pls').required(),
  last_name: yup.string().matches(/^[A-Za-z ]*$/, 'No special characters pls').required(),
  first_name: yup.string().matches(/^[A-Za-z ]*$/, 'No special characters pls').required(),
  email_prefix: yup.string().required(),
  email_domain: yup.string().required(),
  email_extension: yup.string().matches(/^[A-Za-z ]*$/, 'Email extension must be letters only').length(3, 'Email extension must be 3 characters').required(),
  full_address: yup.string().min(35, `Your address is TOO SHORT! Can't fool anyone here! It must be at least 35 characters!`).required(),
  city_name: yup.string().required(),
  street_name: yup.string().required(),
  state: yup.string().required(),

  phone_number_0: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_1: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_2: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_3: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_4: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_5: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_6: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_7: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_8: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_9: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  phone_number_10: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid'),
  
  phone_number_verification_0: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_0'), null], 'Phone number does not match'),
  phone_number_verification_1: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_1'), null], 'Phone number does not match'),
  phone_number_verification_2: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_2'), null], 'Phone number does not match'),
  phone_number_verification_3: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_3'), null], 'Phone number does not match'),
  phone_number_verification_4: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_4'), null], 'Phone number does not match'),
  phone_number_verification_5: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_5'), null], 'Phone number does not match'),
  phone_number_verification_6: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_6'), null], 'Phone number does not match'),
  phone_number_verification_7: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_7'), null], 'Phone number does not match'),
  phone_number_verification_8: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_8'), null], 'Phone number does not match'),
  phone_number_verification_9: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_9'), null], 'Phone number does not match'),
  phone_number_verification_10: yup.string().matches(/^[0-9]+$/gi, 'Must be a number').required('Phone number is invalid').oneOf([yup.ref('phone_number_10'), null], 'Phone number does not match'),
})